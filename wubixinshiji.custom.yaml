
patch:
  # __include:default
  inline_preedit: false #輸入碼內嵌

  ascii_composer/switch_key:   
    Shift_L: noop    #由于回车清屏，inline_ascii,无效； commit_text
    Shift_R: commit_code
    Control_L: noop
    Control_R: noop
    Caps_Lock: clear
    Eisu_toggle: clear
    # Return: clear
    
  key_binder/bindings:  
    - { when: composing, accept: Return, send: Escape }
    - { when: has_menu, accept: Return, send: Escape }
    # 空碼時按空格鍵清空輸入碼
    - {when: has_menu, accept: space, send: space}
    - {when: composing, accept: space, send: Escape}
    - {accept: "Control+period", toggle: ascii_mode, when: always}
    - {accept: "Shift+space", toggle: full_shape, when: always}

  engine/segmentors:
    - ascii_segmentor
    - matcher
    - "affix_segmentor@mkst"
    # - "affix_segmentor@rvlk1"
    # - "affix_segmentor@zhuyin_fix"
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  engine/translators:
    # - punctuator
    - punct_translator
    # - echo_translator  # （无有其他结果时，）创建一个与编码串一个模样的候选项
    - reverse_lookup_translator
    - "table_translator@mkst"
    - table_translator@fixed
    - table_translator
  engine/filters:
    # - simplifier  # 必要組件一
    - uniquifier  #作用是在 simplifier 執行轉換之後，將文字相同的候選項合併。

  translator/+:
    enable_sentence: false 
    # enable_encoder: false
    # encode_commit_history: false
    # enable_user_dict: false
    # max_phrase_length: 4
    tips: "〔flex〕"
    # __patch=/
    disable_user_dict_for_patterns:
      - "^z.*$"
      # - "^[A-Za-z ].*$"
    # suffix: "+"

  mkst:
    __include: wubixinshiji.schema.yaml:/translator
    initial_quality: 10
    enable_sentence: true
    prefix: '`'
    tips: "〔精准造词〕"
    tag: mkst

  fixed:  
    # translator: wubixinshiji
    __include: wubixinshiji.schema.yaml:/translator    # circular dependencies detected in wubixinshiji.schema:
    # __patch: translator/dictionary  
      # __include: table_translator/dictionary
    # enable_charset_filter: false
    enable_sentence: false       #是否開啓自動造句
    enable_encoder: false      # 自动造词
    encode_commit_history: false      # 对已上屏词自动成词  
    # max_phrase_length: 4
    # enable_user_dict: false
    enable_completion: true
    initial_quality: 10000
    # sentence_over_completion: true    # 智能组句
    tips: "〔fixed〕"
    closing_tips: "fixed"
    disable_user_dict_for_patterns:  
      - "^z.*$"
      - "^[A-Za-z ].*$"  

  punctuator:  
    import_preset: symbols  
    use_space: true  #可以符号直接上屏，注意缩进
    # __patch:
    # #   full_shape:
    # #     '\\' : { commit: 、 }
    # half_shape/+:
    #   '\': { commit: 、 }
  # 'punctuator/half_shape/\': {commit: "、" }     #爲字符串包含符號，最好用 單引號 括起來；儘量不用雙引號以避免符號的轉義問題
  'punctuator/half_shape/\': "、"    #爲字符串包含符號，最好用 單引號 括起來；儘量不用雙引號以避免符號的轉義問題
  # "punctuator/half_shape/\\": { commit: 、 }     #爲字符串包含符號，最好用 單引號 括起來；儘量不用雙引號以避免符號的轉義問題

  #   - `
  #   - 123456
  #   - gz05188
  #   - 'http://rime.github.io'
  #   - 上天赋予你高的智商，教你用到有用的地方。


  recognizer:  
    import_preset: default
    patterns:
      reverse_lookup: "^z[a-z]*'?$"
      mkst: "^[a-y]*`[a-y`]*$"
      # email: "^[a-z][-_.0-9a-z]@.$"
      # url: "^(www[.]|https?:|ftp:|mailto:).$"
      # number: '^[-+]?[0-9][.:0-9]*[%]?$'
      punct: '^/([0-9]0?|[A-Za-z]+)$'  #配合symbols.yaml中的特殊字符輸入

  speller:
    delimiter: " `;'" 
    #max_code_length: 4
    auto_select: true #顶字上屏
    # auto_select_pattern: "^[a-y][a-z]{0,3}$"
    max_code_length: 4  

# reverse_lookup:
#   # tag: reverse_lookup
#   # dictionary: pinyin_simp
#   prefix: "/"
#   # suffix: "'"
#   tips: 〔符号〕
#   preedit_format:
#     - xform/([nl])v/$1ü/

